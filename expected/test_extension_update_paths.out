[2023-10-26 12:01:27] [DEBUG1] No connectiong string given; letting libpq figure out what to do from the [1mPG*[22m environment variablesâ€¦
[2023-10-26 12:01:27] [INFO] DB connection established to [1mcontrib_regression[22m on [1m/tmp/pg_regress-KAJRxc:51698[22m as [1mbigsmoke[22m
[2023-10-26 12:01:27] [DEBUG3] Listening to cmdq channel for changes to the `cmd_queue` table.
\set ECHO none
NOTICE:  CREATE EXTENSION pg_cmd_queue WITH VERSION '0.1.0' CASCADE
NOTICE:  installing required extension "hstore"
NOTICE:  CALL cmdq.test__pg_cmd_queue()
[2023-10-26 12:01:27] [INFO] Received a NOTIFY event on the `cmdq` channel: (cmd_queue,cmdq.tst_nix_cmd,INSERT)
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG1] No connectiong string given; letting libpq figure out what to do from the [1mPG*[22m environment variablesâ€¦[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [INFO] DB connection established to [1mcontrib_regression[22m on [1m/tmp/pg_regress-KAJRxc:51698[22m as [1mbigsmoke[22m[0m
[2023-10-26 12:01:27] [INFO] Received a NOTIFY event on the `cmdq` channel: (cmd_queue,tst_nix_cmd,LISTEN)
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG3] Getting oldest queue_cmd from cmd_queueâ€¦[0m
[2023-10-26 12:01:27] [INFO] Received a NOTIFY event on the `cmdq` channel: (cmd_queue,tst_nix_cmd,PREPARE)
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG3] cmd_id = 'cmd-1-inserted-in-queue-before-queue-is-registered': [1mnixtestcmd --stdout-line "A line" --exit-code 0[22m[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG4] cmd_id = 'cmd-1-inserted-in-queue-before-queue-is-registered': fork() child PID = [1m402964[22m[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] fds[].revents: 0, 1, 0[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] cmd STDOUT ready for read()[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] Read 7 bytes from cmd STDOUT: A line
[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] fds[].revents: 8, 16, 16[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG3] Getting oldest queue_cmd from cmd_queueâ€¦[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG3] cmd_id = 'cmd-2-inserted-in-queue-before-queue-is-registered': [1mnixtestcmd --stdout-line "A line, distinguishable from cmd-1's line." --exit-code 0[22m[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG4] cmd_id = 'cmd-2-inserted-in-queue-before-queue-is-registered': fork() child PID = [1m402965[22m[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] fds[].revents: 0, 1, 0[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] cmd STDOUT ready for read()[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] Read 43 bytes from cmd STDOUT: A line, distinguishable from cmd-1's line.
Ò[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] fds[].revents: 8, 16, 16[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG3] Getting oldest queue_cmd from cmd_queueâ€¦[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] After this transaction, we're going to poll() and wait for ~ 86399999 msec[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] Received a NOTIFY event on the `tst_nix_cmd` channel: (cmdq.tst_nix_cmd,cmd-with-clean-exit,)[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG1] It appears as if this NOTIFY event on the `tst_nix_cmd` channel is for me: (cmdq.tst_nix_cmd,cmd-with-clean-exit,)[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG3] Getting cmd `WHERE cmd_id = 'cmd-with-clean-exit' AND cmd_subid IS NOT DISTINCT FROM NULL` from queueâ€¦[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG3] cmd_id = 'cmd-with-clean-exit': [1mnixtestcmd --stdout-line "This line should be sent to STDOUT." --stderr-line "This line is to be sent to STDERR." --echo-stdin --stdout-line "This line should be printed after the echoed STDIN." --echo-env-var PG_CMDQ_TST_VAR1 --stdout-line "This line should be squeezed between 2 env. variables." --echo-env-var PG_CMDQ_TST_VAR2 --exit-code 0[22m[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG4] cmd_id = 'cmd-with-clean-exit': fork() child PID = [1m402966[22m[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] fds[].revents: 4, 0, 0[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] cmd STDIN ready for write()[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] fds[].revents: 0, 1, 0[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] cmd STDOUT ready for read()[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] Read 218 bytes from cmd STDOUT: This line should be sent to STDOUT.
This STDIN should be echoed to STDOUT,
including this 2nd line.
This line should be printed after the echoed STDIN.
var1_value
This line should be squeezed between 2 env. variables.
¨Ò[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] Read 29 bytes from cmd STDOUT: var2: with => signs, \ and "
TDOUT.
This STDIN should be echoed to STDOUT,
including this 2nd line.
This line should be printed after the echoed STDIN.
var1_value
This line should be squeezed between 2 env. variables.
¨Ò[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] fds[].revents: 0, 0, 1[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] cmd STDERR ready for read()[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] fds[].revents: 8, 16, 16[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] Received a NOTIFY event on the `tst_nix_cmd` channel: (cmdq.tst_nix_cmd,cmd-exceeds-timeout-with-default-sigterm-action,)[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG1] It appears as if this NOTIFY event on the `tst_nix_cmd` channel is for me: (cmdq.tst_nix_cmd,cmd-exceeds-timeout-with-default-sigterm-action,)[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG3] Getting cmd `WHERE cmd_id = 'cmd-exceeds-timeout-with-default-sigterm-action' AND cmd_subid IS NOT DISTINCT FROM NULL` from queueâ€¦[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG3] cmd_id = 'cmd-exceeds-timeout-with-default-sigterm-action': [1mnixtestcmd --stdout-line "Line 1." --sleep-ms 10000 --exit-code 0[22m[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG4] cmd_id = 'cmd-exceeds-timeout-with-default-sigterm-action': fork() child PID = [1m402967[22m[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] fds[].revents: 0, 1, 0[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] cmd STDOUT ready for read()[0m
[38;2;170;200;240m[2023-10-26 12:01:27] [tst_nix_cmd] [DEBUG5] Read 8 bytes from cmd STDOUT: Line 1.
 [0m
[38;2;170;200;240m[2023-10-26 12:01:29] [tst_nix_cmd] [ERROR] queue_cmd_timeout of 2.000000sec exceeded; sending SIGTERM signal to PID 402967[0m
[38;2;170;200;240m[2023-10-26 12:01:29] [tst_nix_cmd] [DEBUG5] fds[].revents: 8, 16, 16[0m
[38;2;170;200;240m[2023-10-26 12:01:29] [tst_nix_cmd] [ERROR] Command cmd-exceeds-timeout-with-default-sigterm-action terminated with signal: 15 / Terminated[0m
[38;2;170;200;240m[2023-10-26 12:01:29] [tst_nix_cmd] [DEBUG5] Command cmd-exceeds-timeout-with-default-sigterm-action STDOUT: Line 1.
[0m
[38;2;170;200;240m[2023-10-26 12:01:29] [tst_nix_cmd] [DEBUG5] Command cmd-exceeds-timeout-with-default-sigterm-action STDERR: [0m
[38;2;170;200;240m[2023-10-26 12:01:29] [tst_nix_cmd] [DEBUG5] Received a NOTIFY event on the `tst_nix_cmd` channel: (cmdq.tst_nix_cmd,cmd-exceeds-timeout-but-exits-cleanly-on-sigterm,)[0m
[38;2;170;200;240m[2023-10-26 12:01:29] [tst_nix_cmd] [DEBUG1] It appears as if this NOTIFY event on the `tst_nix_cmd` channel is for me: (cmdq.tst_nix_cmd,cmd-exceeds-timeout-but-exits-cleanly-on-sigterm,)[0m
[38;2;170;200;240m[2023-10-26 12:01:29] [tst_nix_cmd] [DEBUG3] Getting cmd `WHERE cmd_id = 'cmd-exceeds-timeout-but-exits-cleanly-on-sigterm' AND cmd_subid IS NOT DISTINCT FROM NULL` from queueâ€¦[0m
[38;2;170;200;240m[2023-10-26 12:01:29] [tst_nix_cmd] [DEBUG3] cmd_id = 'cmd-exceeds-timeout-but-exits-cleanly-on-sigterm': [1mnixtestcmd --stdout-line "Line 1." --exit-code-on-sigterm 15 --sleep-ms 10000 --exit-code 0[22m[0m
[38;2;170;200;240m[2023-10-26 12:01:29] [tst_nix_cmd] [DEBUG4] cmd_id = 'cmd-exceeds-timeout-but-exits-cleanly-on-sigterm': fork() child PID = [1m402968[22m[0m
[38;2;170;200;240m[2023-10-26 12:01:29] [tst_nix_cmd] [DEBUG5] fds[].revents: 0, 1, 0[0m
[38;2;170;200;240m[2023-10-26 12:01:29] [tst_nix_cmd] [DEBUG5] cmd STDOUT ready for read()[0m
[38;2;170;200;240m[2023-10-26 12:01:29] [tst_nix_cmd] [DEBUG5] Read 8 bytes from cmd STDOUT: Line 1.
 [0m
[38;2;170;200;240m[2023-10-26 12:01:31] [tst_nix_cmd] [ERROR] queue_cmd_timeout of 2.000000sec exceeded; sending SIGTERM signal to PID 402968[0m
[38;2;170;200;240m[2023-10-26 12:01:31] [tst_nix_cmd] [DEBUG5] fds[].revents: 8, 16, 16[0m
[38;2;170;200;240m[2023-10-26 12:01:31] [tst_nix_cmd] [ERROR] cmd_id = 'cmd-exceeds-timeout-but-exits-cleanly-on-sigterm': exited with non-zero exit_code: 15[0m
[38;2;170;200;240m[2023-10-26 12:01:31] [tst_nix_cmd] [DEBUG5] Command cmd-exceeds-timeout-but-exits-cleanly-on-sigterm STDOUT: Line 1.
[0m
[38;2;170;200;240m[2023-10-26 12:01:31] [tst_nix_cmd] [DEBUG5] Command cmd-exceeds-timeout-but-exits-cleanly-on-sigterm STDERR: [0m
[38;2;170;200;240m[2023-10-26 12:01:31] [tst_nix_cmd] [DEBUG5] Received a NOTIFY event on the `tst_nix_cmd` channel: (cmdq.tst_nix_cmd,cmd-exceeds-timeout-and-ignores-sigterm,)[0m
[38;2;170;200;240m[2023-10-26 12:01:31] [tst_nix_cmd] [DEBUG1] It appears as if this NOTIFY event on the `tst_nix_cmd` channel is for me: (cmdq.tst_nix_cmd,cmd-exceeds-timeout-and-ignores-sigterm,)[0m
[38;2;170;200;240m[2023-10-26 12:01:31] [tst_nix_cmd] [DEBUG3] Getting cmd `WHERE cmd_id = 'cmd-exceeds-timeout-and-ignores-sigterm' AND cmd_subid IS NOT DISTINCT FROM NULL` from queueâ€¦[0m
[38;2;170;200;240m[2023-10-26 12:01:31] [tst_nix_cmd] [DEBUG3] cmd_id = 'cmd-exceeds-timeout-and-ignores-sigterm': [1mnixtestcmd --stdout-line "Line 1." --ignore-sigterm --sleep-ms 10000 --exit-code 0[22m[0m
[38;2;170;200;240m[2023-10-26 12:01:31] [tst_nix_cmd] [DEBUG4] cmd_id = 'cmd-exceeds-timeout-and-ignores-sigterm': fork() child PID = [1m402969[22m[0m
[38;2;170;200;240m[2023-10-26 12:01:31] [tst_nix_cmd] [DEBUG5] fds[].revents: 0, 1, 0[0m
[38;2;170;200;240m[2023-10-26 12:01:31] [tst_nix_cmd] [DEBUG5] cmd STDOUT ready for read()[0m
[38;2;170;200;240m[2023-10-26 12:01:31] [tst_nix_cmd] [DEBUG5] Read 8 bytes from cmd STDOUT: Line 1.
 [0m
[38;2;170;200;240m[2023-10-26 12:01:33] [tst_nix_cmd] [ERROR] queue_cmd_timeout of 2.000000sec exceeded; sending SIGTERM signal to PID 402969[0m
[38;2;170;200;240m[2023-10-26 12:01:35] [tst_nix_cmd] [ERROR] We tried to kill PID 402969 gently, 2.000001 seconds ago; now we will SIGKILL it.[0m
[38;2;170;200;240m[2023-10-26 12:01:35] [tst_nix_cmd] [ERROR] Command cmd-exceeds-timeout-and-ignores-sigterm terminated with signal: 9 / Killed[0m
[38;2;170;200;240m[2023-10-26 12:01:35] [tst_nix_cmd] [DEBUG5] Command cmd-exceeds-timeout-and-ignores-sigterm STDOUT: Line 1.
[0m
[38;2;170;200;240m[2023-10-26 12:01:35] [tst_nix_cmd] [DEBUG5] Command cmd-exceeds-timeout-and-ignores-sigterm STDERR: [0m
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to default value for column queue_cmd_class of table tst_nix_cmd__expect
drop cascades to default value for column queue_cmd_class of table tst_nix_cmd__actual
NOTICE:  DROP EXTENSION pg_cmd_queue CASCADE
[2023-10-26 12:01:35] [INFO] Received a NOTIFY event on the `cmdq` channel: (cmd_queue,cmdq.tst_nix_cmd,DELETE)
[2023-10-26 12:01:35] [INFO] Requesting `cmdq.tst_nix_cmd` runner (thread) to shut down gently.
[38;2;170;200;240m[2023-10-26 12:01:35] [tst_nix_cmd] [DEBUG1] Exiting `poll()` loop after receiving `kill(0)` signal via pipe.[0m
[38;2;170;200;240m[2023-10-26 12:01:35] [tst_nix_cmd] [DEBUG5] Exited outer/(re)connect loop[0m
[2023-10-26 12:01:35] [INFO] Received signal 15
[2023-10-26 12:01:35] [INFO] Requesting `cmdq.tst_nix_cmd` runner (thread) to shut down gently.
